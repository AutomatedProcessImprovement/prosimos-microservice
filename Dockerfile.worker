# 
# `python-base` stage
#  contains all shared environment variables
#
FROM python:3.9-slim-buster as python-base

ENV \
    POETRY_VERSION=1.4.2 \
    POETRY_HOME="/opt/poetry" \
    POETRY_VIRTUALENVS_IN_PROJECT=true \
    POETRY_NO_INTERACTION=1 \
    VENV_PATH="/app/.venv"

ENV PATH="$POETRY_HOME/bin:$VENV_PATH/bin:$PATH"

#
# `builder-base` stage
#  used to build poetry
#
FROM python-base as builder-base
RUN apt-get update \
    && apt-get install --no-install-recommends -y \
        curl

# install poetry
RUN curl -sSL https://install.python-poetry.org | python3 -

#
# `development` stage
#  used to create a virtual environment and start server
#
FROM python-base as development

# copy built poetry
COPY --from=builder-base $POETRY_HOME $POETRY_HOME

WORKDIR /app

# copy project sources
COPY poetry.lock pyproject.toml poetry.toml .
COPY ./src ./src
COPY exts.py factory.py app.py celery.sh .

RUN chmod -R 777 ./celery.sh

# do not install dev dependencies
RUN poetry install --only main

CMD [ "./celery.sh" ]
